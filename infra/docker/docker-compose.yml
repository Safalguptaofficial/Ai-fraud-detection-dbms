
services:
  oracle:
    image: gvenzl/oracle-xe:21-slim
    container_name: fraud-dbms_oracle_1
    environment:
      - ORACLE_PASSWORD=password
      - ORACLE_DATABASE=XE
    ports:
      - "1521:1521"
    healthcheck:
      test: ["CMD-SHELL", "sqlplus -S system/password@XE <<< 'SELECT 1 FROM DUAL;' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ../../db/oracle:/docker-entrypoint-initdb.d
    networks:
      - backend

  postgres:
    image: postgres:16
    container_name: fraud-dbms_postgres_1
    environment:
      POSTGRES_DB: frauddb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../db/postgres:/docker-entrypoint-initdb.d
    networks:
      - backend

  mongo:
    image: mongo:7
    container_name: fraud-dbms_mongo_1
    command: mongod --replSet rs0
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'rs.initiate({_id:"rs0",members:[{_id:0,host:"mongo:27017"}]}).ok || exit 0'
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mongo-data:/data/db
      - ../../db/mongo:/docker-entrypoint-initdb.d
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: fraud-dbms_redis_1
    ports:
      - "6379:6379"
    networks:
      - backend

  api:
    build:
      context: ../../services/api
      dockerfile: Dockerfile
    container_name: fraud-dbms_api_1
    ports:
      - "8000:8000"
    environment:
      - ORACLE_URI=oracle://system:password@oracle:1521/XE
      - POSTGRES_URI=postgresql://postgres:password@postgres:5432/frauddb
      - MONGO_URI=mongodb://mongo:27017/frauddb
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=dev-secret-change-in-production
      - API_KEY_WORKER=dev-key
      - ENVIRONMENT=development
    depends_on:
      oracle:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend
      - frontend

  worker:
    build:
      context: ../../services/worker
      dockerfile: Dockerfile
    container_name: fraud-dbms_worker_1
    environment:
      - ORACLE_URI=oracle://system:password@oracle:1521/XE
      - POSTGRES_URI=postgresql://postgres:password@postgres:5432/frauddb
      - API_URI=http://api:8000
      - API_KEY_WORKER=dev-key
      - ETL_INTERVAL=60
    depends_on:
      oracle:
        condition: service_healthy
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    networks:
      - backend

  web:
    build:
      context: ../../apps/web
      dockerfile: Dockerfile
    container_name: fraud-dbms_web_1
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - JWT_SECRET=dev-secret-change-in-production
    depends_on:
      - api
    networks:
      - frontend

  prometheus:
    image: prom/prometheus:latest
    container_name: fraud-dbms_prometheus_1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: fraud-dbms_grafana_1
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboard.json:/etc/grafana/dashboards/fraud-dbms.json
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    networks:
      - backend
    depends_on:
      - prometheus

volumes:
  oracle-data:
  postgres-data:
  mongo-data:
  prometheus-data:
  grafana-data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

